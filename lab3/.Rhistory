"Mr Robot",
"Sense8",
"Black Mirror",
"Breaking Bad",
"House of Cards",
"Stranger Things",
"Daredevil",
"Game of Thrones")),
plotlyOutput("plot"),
verbatimTextOutput("hover"),
verbatimTextOutput("click"),
verbatimTextOutput("brush"),
verbatimTextOutput("zoom")
)
server <- function(input, output, session) {
output$plot <- renderPlotly({
# use the key aesthetic/argument to help uniquely identify selected observations
dexter <- series_from_imdb %>%
filter(series_name == input$name)
key <- row.names(dexter)
p1 <- plot_ly(dexter, x = ~series_ep, y = ~r10, key = ~key, color = ~as.character(season),
mode =     "lines+markers" ) %>%
layout(dragmode = "select", title = "Proporcao que atribuiu nota max e min, respectivamente")
p2 <- plot_ly(dexter, x = ~series_ep, y = ~r1, key = ~key, color = ~as.character(season),
mode =     "lines+markers") %>%
layout(dragmode = "select")
p <- subplot(p1, p2, nrows = 2, margin = 0.04, heights = c(0.5, 0.5))
})
}
shinyApp(ui, server)
series_from_imdb <- read_csv("series_from_imdb.csv")
library(flexdashboard)
library(tidyverse)
library(plotly)
library(highcharter)
library(readr)
library(dplyr)
series_from_imdb <- read_csv("series_from_imdb.csv")
install.packages("fps")
install.packages("dbscan")
install.packages("dbscan")
knitr::opts_chunk$set(echo = TRUE)
library(dbscan)
db <- dbscan(dat, eps=.25, minPts=3)
knitr::opts_chunk$set(echo = TRUE)
install.packages("factoextra")
install.packages("factoextra")
library(tidyverse, warn.conflicts = F)
library(rvest)
library(plotly)
library(cluster)
library(ggdendro)
#library(fpc)
theme_set(theme_light())
source("plota_solucoes_hclust.R")
from_page <- read_html("https://www.rottentomatoes.com/celebrity/robert_downey_jr/") %>%
html_node("#filmographyTbl") %>% # A sintaxe da expressão é de um seletor à lá JQuery: https://rdrr.io/cran/rvest/man/html_nodes.html
html_table(fill=TRUE) %>% # Faz parse
as.tibble()
filmes = from_page %>%
filter(RATING != "No Score Yet",
`BOX OFFICE` != "—",
CREDIT != "Executive Producer") %>%
mutate(RATING = as.numeric(gsub("%", "", RATING)),
`BOX OFFICE` = as.numeric(gsub("[$|M]", "", `BOX OFFICE`))) %>%
filter(`BOX OFFICE` >= 1) # Tem dois filmes que não parecem ter sido lançados no mundo todo
filmes %>%
ggplot(aes(x = "Filmes", y = RATING)) +
geom_jitter(width = .01, height = 0, size = 2, alpha = .6)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, warn.conflicts = F)
library(rvest)
library(plotly)
library(cluster)
library(ggdendro)
#library(fpc)
theme_set(theme_light())
source("plota_solucoes_hclust.R")
from_page <- read_html("https://www.rottentomatoes.com/celebrity/robert_downey_jr/") %>%
html_node("#filmographyTbl") %>% # A sintaxe da expressão é de um seletor à lá JQuery: https://rdrr.io/cran/rvest/man/html_nodes.html
html_table(fill=TRUE) %>% # Faz parse
as.tibble()
filmes = from_page %>%
filter(RATING != "No Score Yet",
`BOX OFFICE` != "—",
CREDIT != "Executive Producer") %>%
mutate(RATING = as.numeric(gsub("%", "", RATING)),
`BOX OFFICE` = as.numeric(gsub("[$|M]", "", `BOX OFFICE`))) %>%
filter(`BOX OFFICE` >= 1) # Tem dois filmes que não parecem ter sido lançados no mundo todo
filmes %>%
ggplot(aes(x = "Filmes", y = RATING)) +
geom_jitter(width = .01, height = 0, size = 2, alpha = .6)
filmes %>%
ggplot(aes(x = RATING)) +
geom_histogram(bins = 16) +
geom_rug()
filmes %>%
ggplot(aes(x = "Filmes", y = `BOX OFFICE`)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6)
filmes %>%
ggplot(aes(x = "Filmes", y = `BOX OFFICE`)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
scale_y_log10()
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20) +
geom_rug()
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20) +
scale_x_log10() +
geom_rug()
p = filmes %>%
ggplot(aes(x = RATING, y = `BOX OFFICE`, label = TITLE)) +
geom_point()
p
#ggplotly(p)
solucoes = tibble(k = 1:9)
row.names(filmes) = NULL
agrupamento_h = filmes %>%
column_to_rownames("TITLE") %>% # hclust precisa dos rótulos em nomes de linha (ruim)
select(RATING) %>%
dist(method = "euclidian") %>%
hclust(method = "ward.D")
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
atribuicoes %>%
ggplot(aes(x = "Filmes", y = RATING, colour = grupo)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
facet_wrap(~ paste(k, " grupos"))
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
plota_hclusts_2d(agrupamento_h_2d,
filmes,
c("RATING", "`BOX OFFICE`"),
linkage_method = "centroid", ks = 1:6)
dat <- filmes[,c(1,4)]
library(dbscan)
db <- dbscan(dat, eps=.25, minPts=3)
db
db <- dbscan(dat, eps=.25, minPts=5)
db
plot(dat, col=db$cluster+1L)
db <- dbscan(dat, eps=.1, minPts=5)
db
plot(dat, col=db$cluster+1L)
db <- dbscan(dat, eps=.25, minPts=10)
db
plot(dat, col=db$cluster+1L)
db
hullplot(ruspini_scaled, db)
hullplot(dat, db)
hullplot(dat, km1)
km1 <- kmeans(dat, 4)
hullplot(dat, km1)
from_page <- read_html("https://www.rottentomatoes.com/celebrity/matt_damon/") %>%
html_node("#filmographyTbl") %>% # A sintaxe da expressão é de um seletor à lá JQuery: https://rdrr.io/cran/rvest/man/html_nodes.html
html_table(fill=TRUE) %>% # Faz parse
as.tibble()
filmes = from_page %>%
filter(RATING != "No Score Yet",
`BOX OFFICE` != "—",
CREDIT != "Executive Producer") %>%
mutate(RATING = as.numeric(gsub("%", "", RATING)),
`BOX OFFICE` = as.numeric(gsub("[$|M]", "", `BOX OFFICE`))) %>%
filter(`BOX OFFICE` >= 1) # Tem dois filmes que não parecem ter sido lançados no mundo todo
from_page <- read_html("https://www.rottentomatoes.com/celebrity/matt_damon/") %>%
html_node("#filmographyTbl") %>% # A sintaxe da expressão é de um seletor à lá JQuery: https://rdrr.io/cran/rvest/man/html_nodes.html
html_table(fill=TRUE) %>% # Faz parse
as.tibble()
filmes = from_page %>%
filter(RATING != "No Score Yet",
`BOX OFFICE` != "—",
CREDIT != "Executive Producer") %>%
mutate(RATING = as.numeric(gsub("%", "", RATING)),
`BOX OFFICE` = as.numeric(gsub("[$|M]", "", `BOX OFFICE`))) %>%
filter(`BOX OFFICE` >= 1) # Tem dois filmes que não parecem ter sido lançados no mundo todo
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, warn.conflicts = F)
library(rvest)
library(plotly)
library(cluster)
library(ggdendro)
#library(fpc)
theme_set(theme_light())
source("plota_solucoes_hclust.R")
from_page <- read_html("https://www.rottentomatoes.com/celebrity/matt_damon/") %>%
html_node("#filmographyTbl") %>% # A sintaxe da expressão é de um seletor à lá JQuery: https://rdrr.io/cran/rvest/man/html_nodes.html
html_table(fill=TRUE) %>% # Faz parse
as.tibble()
filmes = from_page %>%
filter(RATING != "No Score Yet",
`BOX OFFICE` != "—",
CREDIT != "Executive Producer") %>%
mutate(RATING = as.numeric(gsub("%", "", RATING)),
`BOX OFFICE` = as.numeric(gsub("[$|M]", "", `BOX OFFICE`))) %>%
filter(`BOX OFFICE` >= 1) # Tem dois filmes que não parecem ter sido lançados no mundo todo
filmes %>%
ggplot(aes(x = "Filmes", y = RATING)) +
geom_jitter(width = .01, height = 0, size = 2, alpha = .6)
filmes %>%
ggplot(aes(x = RATING)) +
geom_histogram(bins = 16) +
geom_rug()
filmes %>%
ggplot(aes(x = "Filmes", y = `BOX OFFICE`)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6)
filmes %>%
ggplot(aes(x = "Filmes", y = `BOX OFFICE`)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
scale_y_log10()
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20) +
geom_rug()
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20) +
scale_x_log10() +
geom_rug()
p = filmes %>%
ggplot(aes(x = RATING, y = `BOX OFFICE`, label = TITLE)) +
geom_point()
p
#ggplotly(p)
solucoes = tibble(k = 1:9)
row.names(filmes) = NULL
agrupamento_h = filmes %>%
column_to_rownames("TITLE") %>% # hclust precisa dos rótulos em nomes de linha (ruim)
select(RATING) %>%
dist(method = "euclidian") %>%
hclust(method = "ward.D")
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
atribuicoes %>%
ggplot(aes(x = "Filmes", y = RATING, colour = grupo)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
facet_wrap(~ paste(k, " grupos"))
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
plota_hclusts_2d(agrupamento_h_2d,
filmes,
c("RATING", "`BOX OFFICE`"),
linkage_method = "centroid", ks = 1:6)
dat <- filmes[,c(1,4)]
set.seed(7)
km1 <- kmeans(dat, 4)
hullplot(dat, km1)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
hullplot(dat, km1)
dat <- filmes[,c(1,4)]
set.seed(7)
km1 <- kmeans(dat, 4)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
hullplot(dat, km1)
unlink('Documents/ad1/lab2/Lab2-parte3_cache', recursive = TRUE)
#k <- kmeans(filmes, 3)
dat <- filmes[,c(1,4)]
#plot(dat, pch = 20, cex = 2)
set.seed(7)
km1 <- kmeans(dat, 4)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
hullplot(dat, km1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, warn.conflicts = F)
library(rvest)
library(plotly)
library(cluster)
library(ggdendro)
#library(fpc)
theme_set(theme_light())
source("plota_solucoes_hclust.R")
from_page <- read_html("https://www.rottentomatoes.com/celebrity/matt_damon/") %>%
html_node("#filmographyTbl") %>% # A sintaxe da expressão é de um seletor à lá JQuery: https://rdrr.io/cran/rvest/man/html_nodes.html
html_table(fill=TRUE) %>% # Faz parse
as.tibble()
filmes = from_page %>%
filter(RATING != "No Score Yet",
`BOX OFFICE` != "—",
CREDIT != "Executive Producer") %>%
mutate(RATING = as.numeric(gsub("%", "", RATING)),
`BOX OFFICE` = as.numeric(gsub("[$|M]", "", `BOX OFFICE`))) %>%
filter(`BOX OFFICE` >= 1) # Tem dois filmes que não parecem ter sido lançados no mundo todo
filmes %>%
ggplot(aes(x = "Filmes", y = RATING)) +
geom_jitter(width = .01, height = 0, size = 2, alpha = .6)
filmes %>%
ggplot(aes(x = RATING)) +
geom_histogram(bins = 16) +
geom_rug()
filmes %>%
ggplot(aes(x = "Filmes", y = `BOX OFFICE`)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6)
filmes %>%
ggplot(aes(x = "Filmes", y = `BOX OFFICE`)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
scale_y_log10()
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20) +
geom_rug()
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20) +
scale_x_log10() +
geom_rug()
p = filmes %>%
ggplot(aes(x = RATING, y = `BOX OFFICE`, label = TITLE)) +
geom_point()
p
#ggplotly(p)
solucoes = tibble(k = 1:9)
row.names(filmes) = NULL
agrupamento_h = filmes %>%
column_to_rownames("TITLE") %>% # hclust precisa dos rótulos em nomes de linha (ruim)
select(RATING) %>%
dist(method = "euclidian") %>%
hclust(method = "ward.D")
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
atribuicoes %>%
ggplot(aes(x = "Filmes", y = RATING, colour = grupo)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
facet_wrap(~ paste(k, " grupos"))
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
plota_hclusts_2d(agrupamento_h_2d,
filmes,
c("RATING", "`BOX OFFICE`"),
linkage_method = "centroid", ks = 1:6)
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
mutate(`BOX OFFICE` = log10(`BOX OFFICE`)) %>%
mutate_all(funs(scale)) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
#ggdendrogram(agrupamento_h_2d, rotate = TRUE)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"),
linkage_method = "ward.D", ks = 1:6) + scale_y_log10()
#k <- kmeans(filmes, 3)
dat <- filmes[,c(1,4)]
#plot(dat, pch = 20, cex = 2)
set.seed(7)
km1 <- kmeans(dat, 4)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
hullplot(dat, km1)
plot(dat, col = km1$cluster,shade=TRUE, pch = 20, cex = 2)
km1 <- kmeans(dat, 5, nstart = 20)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
km1 <- kmeans(dat, 4, nstart = 20)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
km1 <- kmeans(dat, 4, nstart = 10)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
dat <- filmes[,c(4,1)]
set.seed(7)
km1 <- kmeans(dat, 4, nstart = 10)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
1
1
1
1
dat <- filmes[,c(1,4)]
set.seed(7)
km1 <- kmeans(dat, 4, nstart = 10)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
km1 <- kmeans(dat, 4, nstart = 2)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
km1 <- kmeans(dat, 4, nstart = 40)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
km1 <- kmeans(dat, 6)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
km1 <- kmeans(dat, 3)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
dat <- filmes2[,c(1,4)]
set.seed(7)
km1 <- kmeans(dat, 3)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
dp = discrproj(data, km1$clustering)
dp = discrproj(dat, km1$clustering)
identify(dat, col = km1$cluster, pch = 20, cex = 2)
identify(p)
points(km1$centers, pch=3, cex=2) # this adds the centroids
km1 <- kmeans(dat, 3)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
points(km1$centers, pch = 20, cex = 2) # this adds the centroids
text(km1$centers, labels=1:4, pos=2) # this adds the cluster ID
unlink('Documents/ad1/lab2/Lab2-parte3_cache', recursive = TRUE)
filmes %>%
ggplot(aes(x = "Filmes", y = RATING)) +
geom_jitter(width = .01, height = 0, size = 2, alpha = .6)
filmes %>%
ggplot(aes(x = RATING)) +
geom_histogram(bins = 16) +
geom_rug()
filmes %>%
ggplot(aes(x = "Filmes", y = `BOX OFFICE`)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6)
filmes %>%
ggplot(aes(x = "Filmes", y = `BOX OFFICE`)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
scale_y_log10()
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20) +
geom_rug()
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20) +
scale_x_log10() +
geom_rug()
p = filmes %>%
ggplot(aes(x = RATING, y = `BOX OFFICE`, label = TITLE)) +
geom_point()
p
#ggplotly(p)
solucoes = tibble(k = 1:9)
row.names(filmes) = NULL
agrupamento_h = filmes %>%
column_to_rownames("TITLE") %>% # hclust precisa dos rótulos em nomes de linha (ruim)
select(RATING) %>%
dist(method = "euclidian") %>%
hclust(method = "ward.D")
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
atribuicoes %>%
ggplot(aes(x = "Filmes", y = RATING, colour = grupo)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
facet_wrap(~ paste(k, " grupos"))
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
plota_hclusts_2d(agrupamento_h_2d,
filmes,
c("RATING", "`BOX OFFICE`"),
linkage_method = "centroid", ks = 1:6)
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
plota_hclusts_2d(agrupamento_h_2d,
filmes,
c("RATING", "`BOX OFFICE`"),
linkage_method = "centroid", ks = 1:6)
agrupamento_h_2d = filmes %>%
column_to_rownames("TITLE") %>%
select(RATING, `BOX OFFICE`) %>%
mutate(`BOX OFFICE` = log10(`BOX OFFICE`)) %>%
mutate_all(funs(scale)) %>%
dist(method = "euclidean") %>%
hclust(method = "centroid")
#ggdendrogram(agrupamento_h_2d, rotate = TRUE)
filmes2 = filmes %>% mutate(`BOX OFFICE` = log10(`BOX OFFICE`))
plota_hclusts_2d(agrupamento_h_2d,
filmes2,
c("RATING", "`BOX OFFICE`"),
linkage_method = "ward.D", ks = 1:6) + scale_y_log10()
#k <- kmeans(filmes, 3)
dat <- filmes2[,c(1,4)]
#plot(dat, pch = 20, cex = 2)
set.seed(7)
km1 <- kmeans(dat, 3)
plot(dat, col = km1$cluster, pch = 20, cex = 2)
View(filmes)
setwd("~/Documents/ad1/lab3/scripts")
setwd("~/Documents/ad1/lab3")
clean
clear
clear()
